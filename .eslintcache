[{"/root/Code/web-IDE/src/index.tsx":"1","/root/Code/web-IDE/src/reportWebVitals.ts":"2","/root/Code/web-IDE/src/App.tsx":"3","/root/Code/web-IDE/src/pages/community_edition.tsx":"4","/root/Code/web-IDE/src/hooks/windowSize.ts":"5","/root/Code/web-IDE/src/cache/cache.ts":"6","/root/Code/web-IDE/src/components/editor/monaco.tsx":"7","/root/Code/web-IDE/src/components/language_select/language_select.tsx":"8","/root/Code/web-IDE/src/pages/professional_edition.tsx":"9","/root/Code/web-IDE/src/components/terminal/terminal.js":"10","/root/Code/web-IDE/src/components/login_button/login_button.tsx":"11","/root/Code/web-IDE/src/routes.tsx":"12","/root/Code/web-IDE/src/pages/login.tsx":"13","/root/Code/web-IDE/src/axios/axiosSetting.ts":"14","/root/Code/web-IDE/src/pages/file.tsx":"15","/root/Code/web-IDE/src/components/dir_tree/dir_tree.tsx":"16"},{"size":569,"mtime":1615000572199,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1615000572199,"results":"19","hashOfConfig":"18"},{"size":1412,"mtime":1615000572199,"results":"20","hashOfConfig":"18"},{"size":2969,"mtime":1615000572199,"results":"21","hashOfConfig":"18"},{"size":580,"mtime":1615000572199,"results":"22","hashOfConfig":"18"},{"size":1301,"mtime":1615000572199,"results":"23","hashOfConfig":"18"},{"size":808,"mtime":1615000572199,"results":"24","hashOfConfig":"18"},{"size":714,"mtime":1615000572199,"results":"25","hashOfConfig":"18"},{"size":1885,"mtime":1615186172871,"results":"26","hashOfConfig":"18"},{"size":1955,"mtime":1615000572199,"results":"27","hashOfConfig":"18"},{"size":377,"mtime":1615001172219,"results":"28","hashOfConfig":"18"},{"size":576,"mtime":1615000928969,"results":"29","hashOfConfig":"18"},{"size":2518,"mtime":1615000891049,"results":"30","hashOfConfig":"18"},{"size":2085,"mtime":1615192077421,"results":"31","hashOfConfig":"18"},{"size":570,"mtime":1615000572199,"results":"32","hashOfConfig":"18"},{"size":2038,"mtime":1615194167761,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"2evk6e",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/root/Code/web-IDE/src/index.tsx",[],["72","73"],"/root/Code/web-IDE/src/reportWebVitals.ts",[],"/root/Code/web-IDE/src/App.tsx",["74","75","76"],"import \"./App.css\";\nimport { AuthProvider } from \"react-auth-kit\";\nimport RouteComponent from \"./routes\";\nimport { useRefreshToken } from \"react-auth-kit\";\nimport React from \"react\";\nimport axios from \"axios\";\nfunction App() {\n  // const refreshToken = useRefreshToken();\n  // React.useEffect(() => {\n  //   const {\n  //     authToken,\n  //     authTokenType,\n  //     expireAt,\n  //   } = refreshToken.getCurrentAuthState(); //Get the current state\n  //   const userState = refreshToken.getCurrentUserState(); //Get the current user's state\n\n  //   //Send the current auth token ad user state to backend\n  //   axios\n  //     .post(\"/api/user/refresh\", {\n  //       authToken: authToken,\n  //       authTokenType: authTokenType,\n  //       expireAt: expireAt,\n  //       userState: userState,\n  //     })\n  //     .then((res) => {\n  //       if (res.status === 200) {\n  //         // Setting the auth state\n  //         refreshToken.updateAuthState(\n  //           res.data.authToken,\n  //           \"Bearer\",\n  //           res.data.expireIn\n  //         );\n\n  //         // Setting the userstate\n  //         refreshToken.updateUserState(res.data.userState);\n  //         console.log(\"refresh success\");\n  //       } else {\n  //         console.log(\"refresh failed\");\n  //       }\n  //     });\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <RouteComponent />\n    </div>\n  );\n}\n\nexport default App;\n","/root/Code/web-IDE/src/pages/community_edition.tsx",[],"/root/Code/web-IDE/src/hooks/windowSize.ts",[],"/root/Code/web-IDE/src/cache/cache.ts",[],"/root/Code/web-IDE/src/components/editor/monaco.tsx",[],"/root/Code/web-IDE/src/components/language_select/language_select.tsx",[],"/root/Code/web-IDE/src/pages/professional_edition.tsx",["77"],"import \"./professional_edition.css\";\nimport React, { useState } from \"react\";\nimport Monaco from \"../components/editor/monaco\";\nimport LanguageSelect from \"../components/language_select/language_select\";\nimport { getCode, getLanguage } from \"../cache/cache\";\nimport MyTerminal from \"../components/terminal/terminal\";\n\nimport { useHistory } from \"react-router-dom\";\nimport DirTree from \"../components/dir_tree/dir_tree\";\nconst languages = [\"cpp\", \"java\"];\n\nconst dirTreeStyle = [\n  {\n    backgroundColor: \"#252526\",\n    color: \"#cccccc\",\n  },\n  {\n    backgroundColor: \"#ffffff\",\n    color: \"#000000\",\n  },\n];\n\nfunction ProfessionalEdition() {\n  const history = useHistory();\n\n  const [language, setLanguage] = useState(getLanguage());\n  const [code, setCode] = useState(getCode(language));\n  // const size = useWindowSize();\n  // const [output, setOutput] = useState(\"\");\n  // const [tabKey, setTabKey] = useState(\"1\");\n\n  return (\n    <div className=\"App\">\n      <LanguageSelect\n        setLanguage={setLanguage}\n        setCode={setCode}\n        value={String(language)}\n      />\n      <div style={{ display: \"flex\" }}>\n        <div\n          style={{\n            width: \"200px\",\n            backgroundColor: dirTreeStyle[0].backgroundColor,\n            height: \"95vh\",\n          }}\n        >\n          <DirTree style={dirTreeStyle[0]}></DirTree>\n        </div>\n        <div style={{ width: \"100%\" }}>\n          <div style={{ paddingRight: \"10px\" }}>\n            <Monaco\n              language={languages[language]}\n              setCode={setCode}\n              code={code}\n            />\n          </div>\n\n          <div style={{ height: \"200px\" }}>\n            <MyTerminal\n              container_id=\"container3\"\n              host=\"193.112.177.167:8000\"\n            ></MyTerminal>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfessionalEdition;\n","/root/Code/web-IDE/src/components/terminal/terminal.js",[],["78","79"],"/root/Code/web-IDE/src/components/login_button/login_button.tsx",[],"/root/Code/web-IDE/src/routes.tsx",["80"],"import { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport CommunityEdition from \"./pages/community_edition\";\nimport ProfessionalEdition from \"./pages/professional_edition\";\nimport Login from \"./pages/login\";\nimport Test from \"./pages/file\";\nexport default function RouterComponent() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/comm\" component={CommunityEdition} />\n      <Route path=\"/login\" component={Login} exact />\n      <Route path=\"/prof\" component={ProfessionalEdition} />\n      <Route path=\"/file\" component={Test} />\n    </BrowserRouter>\n  );\n}\n","/root/Code/web-IDE/src/pages/login.tsx",["81","82","83"],"import { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./login.css\";\nimport axios from \"../axios/axiosSetting\";\nimport { getTokens, setTokens } from \"../cache/cache\";\nconst Login = () => {\n  const onFinish = (values: any) => {\n    console.log(\"Received values of form: \", values);\n    axios\n      .post(\"/api/user/login\", {\n        username: values.username,\n        password: values.password,\n      })\n      .then((res) => {\n        if (!res) {\n          console.log(\"服务器错误\");\n          return;\n        }\n        \n        if (res.data.status_code !== 0) {\n          console.log(\"用户名或密码错误\");\n          return;\n        }\n        console.log(res);\n\n        setTokens(\n          res.data.data.access_token,\n          res.data.data.access_exp,\n          res.data.data.refresh_token,\n          res.data.data.refresh_exp\n        );\n\n        console.log(\n          `exp after ${\n            (res.data.data.access_exp -\n              Date.parse(new Date().toString()) / 1000) /\n            60\n          } minutes`\n        );\n      });\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Username\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n          Or <a href=\"\">register now!</a>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\nexport default Login;\n","/root/Code/web-IDE/src/axios/axiosSetting.ts",["84","85","86"],"/root/Code/web-IDE/src/pages/file.tsx",[],"/root/Code/web-IDE/src/components/dir_tree/dir_tree.tsx",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":22},{"ruleId":"92","severity":1,"message":"96","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":13},{"ruleId":"92","severity":1,"message":"98","line":24,"column":9,"nodeType":"94","messageId":"95","endLine":24,"endColumn":16},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"99","line":1,"column":32,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"100","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":75,"column":11,"nodeType":"103","endLine":75,"endColumn":52},{"ruleId":"101","severity":1,"message":"102","line":88,"column":14,"nodeType":"103","endLine":88,"endColumn":25},{"ruleId":"92","severity":1,"message":"104","line":6,"column":32,"nodeType":"94","messageId":"95","endLine":6,"endColumn":46},{"ruleId":"92","severity":1,"message":"105","line":33,"column":7,"nodeType":"94","messageId":"95","endLine":33,"endColumn":18},{"ruleId":"92","severity":1,"message":"106","line":43,"column":5,"nodeType":"94","messageId":"95","endLine":43,"endColumn":17},{"ruleId":"92","severity":1,"message":"107","line":4,"column":17,"nodeType":"94","messageId":"95","endLine":4,"endColumn":20},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'useRefreshToken' is defined but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.","'getTokens' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'getAccessToken' is defined but never used.","'autoRefresh' is assigned a value but never used.","'isRefreshing' is assigned a value but never used.","'get' is defined but never used.","no-global-assign","no-unsafe-negation"]