[{"/root/Code/web-IDE/src/index.tsx":"1","/root/Code/web-IDE/src/reportWebVitals.ts":"2","/root/Code/web-IDE/src/App.tsx":"3","/root/Code/web-IDE/src/pages/community_edition.tsx":"4","/root/Code/web-IDE/src/hooks/windowSize.ts":"5","/root/Code/web-IDE/src/cache/cache.ts":"6","/root/Code/web-IDE/src/components/editor/monaco.tsx":"7","/root/Code/web-IDE/src/components/language_select/language_select.tsx":"8","/root/Code/web-IDE/src/pages/professional_edition.tsx":"9","/root/Code/web-IDE/src/components/terminal/terminal.js":"10","/root/Code/web-IDE/src/components/login_button/login_button.tsx":"11","/root/Code/web-IDE/src/routes.tsx":"12","/root/Code/web-IDE/src/pages/login.tsx":"13","/root/Code/web-IDE/src/axios/axiosSetting.ts":"14","/root/Code/web-IDE/src/pages/file.tsx":"15","/root/Code/web-IDE/src/components/dir_tree/dir_tree.tsx":"16"},{"size":569,"mtime":1615284964115,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1613004755000,"results":"19","hashOfConfig":"18"},{"size":1412,"mtime":1614841868580,"results":"20","hashOfConfig":"18"},{"size":2969,"mtime":1614526952460,"results":"21","hashOfConfig":"18"},{"size":580,"mtime":1613004755000,"results":"22","hashOfConfig":"18"},{"size":1301,"mtime":1614844807770,"results":"23","hashOfConfig":"18"},{"size":796,"mtime":1615282740035,"results":"24","hashOfConfig":"18"},{"size":714,"mtime":1614526938060,"results":"25","hashOfConfig":"18"},{"size":3625,"mtime":1615285441095,"results":"26","hashOfConfig":"18"},{"size":2036,"mtime":1615283185645,"results":"27","hashOfConfig":"18"},{"size":377,"mtime":1615199909460,"results":"28","hashOfConfig":"18"},{"size":576,"mtime":1615199909460,"results":"29","hashOfConfig":"18"},{"size":2518,"mtime":1615199909460,"results":"30","hashOfConfig":"18"},{"size":2082,"mtime":1615271887165,"results":"31","hashOfConfig":"18"},{"size":570,"mtime":1614846497730,"results":"32","hashOfConfig":"18"},{"size":2983,"mtime":1615281025385,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"txvxas",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},"/root/Code/web-IDE/src/index.tsx",[],"/root/Code/web-IDE/src/reportWebVitals.ts",[],["72","73"],"/root/Code/web-IDE/src/App.tsx",["74","75","76"],"import \"./App.css\";\nimport { AuthProvider } from \"react-auth-kit\";\nimport RouteComponent from \"./routes\";\nimport { useRefreshToken } from \"react-auth-kit\";\nimport React from \"react\";\nimport axios from \"axios\";\nfunction App() {\n  // const refreshToken = useRefreshToken();\n  // React.useEffect(() => {\n  //   const {\n  //     authToken,\n  //     authTokenType,\n  //     expireAt,\n  //   } = refreshToken.getCurrentAuthState(); //Get the current state\n  //   const userState = refreshToken.getCurrentUserState(); //Get the current user's state\n\n  //   //Send the current auth token ad user state to backend\n  //   axios\n  //     .post(\"/api/user/refresh\", {\n  //       authToken: authToken,\n  //       authTokenType: authTokenType,\n  //       expireAt: expireAt,\n  //       userState: userState,\n  //     })\n  //     .then((res) => {\n  //       if (res.status === 200) {\n  //         // Setting the auth state\n  //         refreshToken.updateAuthState(\n  //           res.data.authToken,\n  //           \"Bearer\",\n  //           res.data.expireIn\n  //         );\n\n  //         // Setting the userstate\n  //         refreshToken.updateUserState(res.data.userState);\n  //         console.log(\"refresh success\");\n  //       } else {\n  //         console.log(\"refresh failed\");\n  //       }\n  //     });\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <RouteComponent />\n    </div>\n  );\n}\n\nexport default App;\n","/root/Code/web-IDE/src/pages/community_edition.tsx",[],"/root/Code/web-IDE/src/hooks/windowSize.ts",[],"/root/Code/web-IDE/src/cache/cache.ts",[],"/root/Code/web-IDE/src/components/editor/monaco.tsx",["77"],"/root/Code/web-IDE/src/components/language_select/language_select.tsx",[],"/root/Code/web-IDE/src/pages/professional_edition.tsx",["78","79","80"],"/root/Code/web-IDE/src/components/terminal/terminal.js",[],["81","82"],"/root/Code/web-IDE/src/components/login_button/login_button.tsx",[],"/root/Code/web-IDE/src/routes.tsx",["83"],"import { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport CommunityEdition from \"./pages/community_edition\";\nimport ProfessionalEdition from \"./pages/professional_edition\";\nimport Login from \"./pages/login\";\nimport Test from \"./pages/file\";\nexport default function RouterComponent() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/comm\" component={CommunityEdition} />\n      <Route path=\"/login\" component={Login} exact />\n      <Route path=\"/prof\" component={ProfessionalEdition} />\n      <Route path=\"/file\" component={Test} />\n    </BrowserRouter>\n  );\n}\n","/root/Code/web-IDE/src/pages/login.tsx",["84","85","86"],"import { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./login.css\";\nimport axios from \"../axios/axiosSetting\";\nimport { getTokens, setTokens } from \"../cache/cache\";\nconst Login = () => {\n  const onFinish = (values: any) => {\n    console.log(\"Received values of form: \", values);\n    axios\n      .post(\"/api/user/login\", {\n        username: values.username,\n        password: values.password,\n      })\n      .then((res) => {\n        if (!res) {\n          console.log(\"服务器错误\");\n          return;\n        }\n        \n        if (res.data.status_code !== 0) {\n          console.log(\"用户名或密码错误\");\n          return;\n        }\n        console.log(res);\n\n        setTokens(\n          res.data.data.access_token,\n          res.data.data.access_exp,\n          res.data.data.refresh_token,\n          res.data.data.refresh_exp\n        );\n\n        console.log(\n          `exp after ${\n            (res.data.data.access_exp -\n              Date.parse(new Date().toString()) / 1000) /\n            60\n          } minutes`\n        );\n      });\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Username\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n          Or <a href=\"\">register now!</a>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\nexport default Login;\n","/root/Code/web-IDE/src/axios/axiosSetting.ts",["87","88","89"],"/root/Code/web-IDE/src/pages/file.tsx",[],"/root/Code/web-IDE/src/components/dir_tree/dir_tree.tsx",["90","91"],"import React, { useState } from \"react\";\nimport { Tree } from \"antd\";\n\nimport axios, { get } from \"../../axios/axiosSetting\";\nimport { log } from \"console\";\n\nconst { DirectoryTree } = Tree;\n\ninterface DataNode {\n  title: string;\n  key: string;\n  isLeaf?: boolean;\n  children?: DataNode[];\n}\n\nconst initTreeDate: DataNode[] = [{ title: \"/\", key: \"/\" }];\n\n// It's just a simple demo. You can use tree map to optimize update perf.\nfunction updateTreeData(\n  list: DataNode[],\n  key: React.Key,\n  children: DataNode[]\n): DataNode[] {\n  return list.map((node) => {\n    if (node.key === key) {\n      return {\n        ...node,\n        children,\n      };\n    } else if (node.children) {\n      return {\n        ...node,\n        children: updateTreeData(node.children, key, children),\n      };\n    }\n    return node;\n  });\n}\n\ninterface FileStat {\n  file_type: number;\n  file_name: string;\n}\n\nfunction getDirectory(containerID: string, path: string) {\n  return axios.get(\"/api/file/dir\", {\n    params: {\n      container_id: containerID,\n      path: path,\n    },\n  });\n}\n\nfunction getFile(containerID: string, path: string) {\n  return axios.get(\"/api/file/file\", {\n    params: {\n      container_id: containerID,\n      path: path,\n    },\n  });\n}\n\nconst DirTree = (props: any) => {\n  const [treeData, setTreeData] = useState(initTreeDate);\n\n  const onLoadData = ({ key, children }: any) => {\n    console.log(key);\n\n    return new Promise<void>(async (resolve) => {\n      if (children) {\n        resolve();\n        return;\n      }\n\n      await getDirectory(\"container3\", key).then((res) => {\n        console.log(res);\n        setTreeData((origin) =>\n          updateTreeData(\n            origin,\n            key,\n            res.data.data.map((fileStat: FileStat) => {\n              const tmp: DataNode = {\n                title: fileStat.file_name,\n                key:\n                  key +\n                  fileStat.file_name +\n                  (fileStat.file_type === 0 ? \"\" : \"/\"),\n                isLeaf: fileStat.file_type === 0,\n              };\n              // console.log(tmp);\n\n              return tmp;\n            })\n          )\n        );\n      });\n      resolve();\n    });\n  };\n\n  const onSelect = (selectedKeys: any, info: any) => {\n    if (selectedKeys.length <= 0) return;\n    console.log(selectedKeys[0]);\n    getFile(\"container3\", selectedKeys[0]).then((res) => {\n      console.log(res.data.data.files[0].content);\n      props.setCode(res.data.data.files[0].content);\n      props.setSelectedFile(selectedKeys[0]);\n    });\n  };\n\n  const onExpand = function (expandedKeys: any, info: any) {\n    if (!expandedKeys || expandedKeys.length === 0) {\n      return;\n    }\n    console.log(info);\n    if (info.expanded) onLoadData({ key: expandedKeys[0] });\n  };\n  return (\n    <DirectoryTree\n      loadData={onLoadData}\n      treeData={treeData}\n      style={props.style}\n      onSelect={onSelect}\n      height={950}\n      onExpand={onExpand}\n    />\n  );\n};\n\nexport default DirTree;\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":22},{"ruleId":"96","severity":1,"message":"100","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":25},{"ruleId":"96","severity":1,"message":"101","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":13},{"ruleId":"96","severity":1,"message":"102","line":22,"column":9,"nodeType":"98","messageId":"99","endLine":22,"endColumn":13},{"ruleId":"96","severity":1,"message":"103","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":17},{"ruleId":"96","severity":1,"message":"104","line":5,"column":32,"nodeType":"98","messageId":"99","endLine":5,"endColumn":46},{"ruleId":"96","severity":1,"message":"105","line":35,"column":9,"nodeType":"98","messageId":"99","endLine":35,"endColumn":16},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"106","line":1,"column":32,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"107","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":75,"column":11,"nodeType":"110","endLine":75,"endColumn":52},{"ruleId":"108","severity":1,"message":"109","line":88,"column":14,"nodeType":"110","endLine":88,"endColumn":25},{"ruleId":"96","severity":1,"message":"104","line":6,"column":32,"nodeType":"98","messageId":"99","endLine":6,"endColumn":46},{"ruleId":"96","severity":1,"message":"111","line":33,"column":7,"nodeType":"98","messageId":"99","endLine":33,"endColumn":18},{"ruleId":"96","severity":1,"message":"112","line":43,"column":5,"nodeType":"98","messageId":"99","endLine":43,"endColumn":17},{"ruleId":"96","severity":1,"message":"113","line":4,"column":17,"nodeType":"98","messageId":"99","endLine":4,"endColumn":20},{"ruleId":"96","severity":1,"message":"114","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":13},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'useRefreshToken' is defined but never used.","'axios' is defined but never used.","'size' is assigned a value but never used.","'getCode' is defined but never used.","'getAccessToken' is defined but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.","'getTokens' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'autoRefresh' is assigned a value but never used.","'isRefreshing' is assigned a value but never used.","'get' is defined but never used.","'log' is defined but never used.","no-global-assign","no-unsafe-negation"]