[{"/root/Code/web-IDE/src/index.tsx":"1","/root/Code/web-IDE/src/reportWebVitals.ts":"2","/root/Code/web-IDE/src/App.tsx":"3","/root/Code/web-IDE/src/pages/community_edition.tsx":"4","/root/Code/web-IDE/src/hooks/windowSize.ts":"5","/root/Code/web-IDE/src/cache/cache.ts":"6","/root/Code/web-IDE/src/components/editor/monaco.tsx":"7","/root/Code/web-IDE/src/components/language_select/language_select.tsx":"8","/root/Code/web-IDE/src/pages/professional_edition.tsx":"9","/root/Code/web-IDE/src/components/terminal/terminal.js":"10","/root/Code/web-IDE/src/components/login_button/login_button.tsx":"11","/root/Code/web-IDE/src/routes.tsx":"12","/root/Code/web-IDE/src/pages/login.tsx":"13"},{"size":569,"mtime":1614567090677,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1613004755000,"results":"16","hashOfConfig":"15"},{"size":1788,"mtime":1614788837270,"results":"17","hashOfConfig":"15"},{"size":2969,"mtime":1614526952460,"results":"18","hashOfConfig":"15"},{"size":580,"mtime":1613004755000,"results":"19","hashOfConfig":"15"},{"size":632,"mtime":1613004755000,"results":"20","hashOfConfig":"15"},{"size":840,"mtime":1613004755000,"results":"21","hashOfConfig":"15"},{"size":714,"mtime":1614526938060,"results":"22","hashOfConfig":"15"},{"size":1362,"mtime":1614775559740,"results":"23","hashOfConfig":"15"},{"size":1955,"mtime":1614511274143,"results":"24","hashOfConfig":"15"},{"size":1676,"mtime":1614590248136,"results":"25","hashOfConfig":"15"},{"size":569,"mtime":1614776172260,"results":"26","hashOfConfig":"15"},{"size":2356,"mtime":1614783017180,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"txvxas",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"/root/Code/web-IDE/src/index.tsx",[],["57","58"],"/root/Code/web-IDE/src/reportWebVitals.ts",[],"/root/Code/web-IDE/src/App.tsx",["59","60"],"/root/Code/web-IDE/src/pages/community_edition.tsx",[],"/root/Code/web-IDE/src/hooks/windowSize.ts",[],"/root/Code/web-IDE/src/cache/cache.ts",[],"/root/Code/web-IDE/src/components/editor/monaco.tsx",[],"/root/Code/web-IDE/src/components/language_select/language_select.tsx",[],"/root/Code/web-IDE/src/pages/professional_edition.tsx",[],"/root/Code/web-IDE/src/components/terminal/terminal.js",[],["61","62"],"/root/Code/web-IDE/src/components/login_button/login_button.tsx",[],"/root/Code/web-IDE/src/routes.tsx",["63"],"/root/Code/web-IDE/src/pages/login.tsx",["64","65"],"import { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./login.css\";\nimport axios from \"axios\";\nimport { useSignIn } from \"react-auth-kit\";\n\nconst Login = () => {\n  const signIn = useSignIn();\n\n  const onFinish = (values: any) => {\n    console.log(\"Received values of form: \", values);\n    axios\n      .post(\"/api/user/login\", {\n        username: values.username,\n        password: values.password,\n      })\n      .then((res) => {\n        if (\n          signIn({\n            token: res.data.data.access_token,\n            expiresIn: 1,\n            tokenType: \"Bearer\",\n            authState: {},\n            refreshToken: res.data.data.refresh_token, // Only if you are using refreshToken feature\n            refreshTokenExpireIn: 60*24*7,\n          })\n        ) {\n          console.log(\"login success\", res);\n        } else {\n          console.log(\"login failed\", res);\n        }\n      });\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Username\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n          Or <a href=\"\">register now!</a>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\nexport default Login;\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":13},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"75","line":1,"column":31,"nodeType":"72","messageId":"73","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":67,"column":11,"nodeType":"78","endLine":67,"endColumn":52},{"ruleId":"76","severity":1,"message":"77","line":80,"column":14,"nodeType":"78","endLine":80,"endColumn":25},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'useRefreshToken' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]